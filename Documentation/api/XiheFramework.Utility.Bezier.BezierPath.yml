### YamlMime:ManagedReference
items:
- uid: XiheFramework.Utility.Bezier.BezierPath
  commentId: T:XiheFramework.Utility.Bezier.BezierPath
  id: BezierPath
  parent: XiheFramework.Utility.Bezier
  children:
  - XiheFramework.Utility.Bezier.BezierPath.GetPathPoints
  - XiheFramework.Utility.Bezier.BezierPath.GetPointOnPath(System.Single)
  - XiheFramework.Utility.Bezier.BezierPath.IsPointOnPath(Vector3,System.Single)
  - XiheFramework.Utility.Bezier.BezierPath.pathPoints
  - XiheFramework.Utility.Bezier.BezierPath.resolution
  langs:
  - csharp
  - vb
  name: BezierPath
  nameWithType: BezierPath
  fullName: XiheFramework.Utility.Bezier.BezierPath
  type: Class
  source:
    id: BezierPath
    path: ''
    startLine: 2683
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Utility.Bezier
  syntax:
    content: 'public class BezierPath : MonoBehaviour'
    content.vb: >-
      Public Class BezierPath
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XiheFramework.Utility.Bezier.BezierPath.pathPoints
  commentId: F:XiheFramework.Utility.Bezier.BezierPath.pathPoints
  id: pathPoints
  parent: XiheFramework.Utility.Bezier.BezierPath
  langs:
  - csharp
  - vb
  name: pathPoints
  nameWithType: BezierPath.pathPoints
  fullName: XiheFramework.Utility.Bezier.BezierPath.pathPoints
  type: Field
  source:
    id: pathPoints
    path: ''
    startLine: 2684
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Utility.Bezier
  syntax:
    content: public List<BezierPath.CurveInfo> pathPoints
    return:
      type: Global.List{XiheFramework.Utility.Bezier.BezierPath.CurveInfo}
    content.vb: Public pathPoints As List(Of BezierPath.CurveInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Utility.Bezier.BezierPath.resolution
  commentId: F:XiheFramework.Utility.Bezier.BezierPath.resolution
  id: resolution
  parent: XiheFramework.Utility.Bezier.BezierPath
  langs:
  - csharp
  - vb
  name: resolution
  nameWithType: BezierPath.resolution
  fullName: XiheFramework.Utility.Bezier.BezierPath.resolution
  type: Field
  source:
    id: resolution
    path: ''
    startLine: 2686
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Utility.Bezier
  syntax:
    content: public int resolution
    return:
      type: System.Int32
    content.vb: Public resolution As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Utility.Bezier.BezierPath.IsPointOnPath(Vector3,System.Single)
  commentId: M:XiheFramework.Utility.Bezier.BezierPath.IsPointOnPath(Vector3,System.Single)
  id: IsPointOnPath(Vector3,System.Single)
  parent: XiheFramework.Utility.Bezier.BezierPath
  langs:
  - csharp
  - vb
  name: IsPointOnPath(Vector3, Single)
  nameWithType: BezierPath.IsPointOnPath(Vector3, Single)
  fullName: XiheFramework.Utility.Bezier.BezierPath.IsPointOnPath(Vector3, System.Single)
  type: Method
  source:
    id: IsPointOnPath
    path: ''
    startLine: 2723
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Utility.Bezier
  syntax:
    content: public bool IsPointOnPath(Vector3 point, float allowedAngularError)
    parameters:
    - id: point
      type: Global.Vector3
    - id: allowedAngularError
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function IsPointOnPath(point As Vector3, allowedAngularError As Single) As Boolean
  overload: XiheFramework.Utility.Bezier.BezierPath.IsPointOnPath*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Utility.Bezier.BezierPath.GetPathPoints
  commentId: M:XiheFramework.Utility.Bezier.BezierPath.GetPathPoints
  id: GetPathPoints
  parent: XiheFramework.Utility.Bezier.BezierPath
  langs:
  - csharp
  - vb
  name: GetPathPoints()
  nameWithType: BezierPath.GetPathPoints()
  fullName: XiheFramework.Utility.Bezier.BezierPath.GetPathPoints()
  type: Method
  source:
    id: GetPathPoints
    path: ''
    startLine: 2798
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Utility.Bezier
  syntax:
    content: public List<TransformInfo> GetPathPoints()
    return:
      type: Global.List{XiheFramework.Utility.Bezier.TransformInfo}
    content.vb: Public Function GetPathPoints As List(Of TransformInfo)
  overload: XiheFramework.Utility.Bezier.BezierPath.GetPathPoints*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Utility.Bezier.BezierPath.GetPointOnPath(System.Single)
  commentId: M:XiheFramework.Utility.Bezier.BezierPath.GetPointOnPath(System.Single)
  id: GetPointOnPath(System.Single)
  parent: XiheFramework.Utility.Bezier.BezierPath
  langs:
  - csharp
  - vb
  name: GetPointOnPath(Single)
  nameWithType: BezierPath.GetPointOnPath(Single)
  fullName: XiheFramework.Utility.Bezier.BezierPath.GetPointOnPath(System.Single)
  type: Method
  source:
    id: GetPointOnPath
    path: ''
    startLine: 2807
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Utility.Bezier
  summary: "\nGet position of certain progress on the path\n"
  example: []
  syntax:
    content: public Vector3 GetPointOnPath(float t)
    parameters:
    - id: t
      type: System.Single
      description: 'global progress of whole path clamp from 0 to 1 '
    return:
      type: Global.Vector3
      description: ''
    content.vb: Public Function GetPointOnPath(t As Single) As Vector3
  overload: XiheFramework.Utility.Bezier.BezierPath.GetPointOnPath*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: XiheFramework.Utility.Bezier
  commentId: N:XiheFramework.Utility.Bezier
  name: XiheFramework.Utility.Bezier
  nameWithType: XiheFramework.Utility.Bezier
  fullName: XiheFramework.Utility.Bezier
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.List{XiheFramework.Utility.Bezier.BezierPath.CurveInfo}
  commentId: '!:Global.List{XiheFramework.Utility.Bezier.BezierPath.CurveInfo}'
  definition: Global.List`1
  name: List<BezierPath.CurveInfo>
  nameWithType: List<BezierPath.CurveInfo>
  fullName: List<XiheFramework.Utility.Bezier.BezierPath.CurveInfo>
  nameWithType.vb: List(Of BezierPath.CurveInfo)
  fullName.vb: List(Of XiheFramework.Utility.Bezier.BezierPath.CurveInfo)
  name.vb: List(Of BezierPath.CurveInfo)
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XiheFramework.Utility.Bezier.BezierPath.CurveInfo
    name: BezierPath.CurveInfo
    nameWithType: BezierPath.CurveInfo
    fullName: XiheFramework.Utility.Bezier.BezierPath.CurveInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XiheFramework.Utility.Bezier.BezierPath.CurveInfo
    name: BezierPath.CurveInfo
    nameWithType: BezierPath.CurveInfo
    fullName: XiheFramework.Utility.Bezier.BezierPath.CurveInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: XiheFramework.Utility.Bezier.BezierPath.IsPointOnPath*
  commentId: Overload:XiheFramework.Utility.Bezier.BezierPath.IsPointOnPath
  name: IsPointOnPath
  nameWithType: BezierPath.IsPointOnPath
  fullName: XiheFramework.Utility.Bezier.BezierPath.IsPointOnPath
- uid: Global.Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XiheFramework.Utility.Bezier.BezierPath.GetPathPoints*
  commentId: Overload:XiheFramework.Utility.Bezier.BezierPath.GetPathPoints
  name: GetPathPoints
  nameWithType: BezierPath.GetPathPoints
  fullName: XiheFramework.Utility.Bezier.BezierPath.GetPathPoints
- uid: Global.List{XiheFramework.Utility.Bezier.TransformInfo}
  commentId: '!:Global.List{XiheFramework.Utility.Bezier.TransformInfo}'
  definition: Global.List`1
  name: List<TransformInfo>
  nameWithType: List<TransformInfo>
  fullName: List<XiheFramework.Utility.Bezier.TransformInfo>
  nameWithType.vb: List(Of TransformInfo)
  fullName.vb: List(Of XiheFramework.Utility.Bezier.TransformInfo)
  name.vb: List(Of TransformInfo)
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XiheFramework.Utility.Bezier.TransformInfo
    name: TransformInfo
    nameWithType: TransformInfo
    fullName: XiheFramework.Utility.Bezier.TransformInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XiheFramework.Utility.Bezier.TransformInfo
    name: TransformInfo
    nameWithType: TransformInfo
    fullName: XiheFramework.Utility.Bezier.TransformInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: XiheFramework.Utility.Bezier.BezierPath.GetPointOnPath*
  commentId: Overload:XiheFramework.Utility.Bezier.BezierPath.GetPointOnPath
  name: GetPointOnPath
  nameWithType: BezierPath.GetPointOnPath
  fullName: XiheFramework.Utility.Bezier.BezierPath.GetPointOnPath
