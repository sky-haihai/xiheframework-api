### YamlMime:ManagedReference
items:
- uid: XiheFramework.Utility.VectorMathHelper
  commentId: T:XiheFramework.Utility.VectorMathHelper
  id: VectorMathHelper
  parent: XiheFramework.Utility
  children:
  - XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircle(System.Single,Vector2)
  - XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircleUniformly(System.Single,Vector2)
  langs:
  - csharp
  - vb
  name: VectorMathHelper
  nameWithType: VectorMathHelper
  fullName: XiheFramework.Utility.VectorMathHelper
  type: Class
  source:
    id: VectorMathHelper
    path: ''
    startLine: 2430
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Utility
  syntax:
    content: public static class VectorMathHelper
    content.vb: Public Module VectorMathHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircle(System.Single,Vector2)
  commentId: M:XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircle(System.Single,Vector2)
  id: GetRandomPointWithinCircle(System.Single,Vector2)
  parent: XiheFramework.Utility.VectorMathHelper
  langs:
  - csharp
  - vb
  name: GetRandomPointWithinCircle(Single, Vector2)
  nameWithType: VectorMathHelper.GetRandomPointWithinCircle(Single, Vector2)
  fullName: XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircle(System.Single, Vector2)
  type: Method
  source:
    id: GetRandomPointWithinCircle
    path: ''
    startLine: 2431
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Utility
  syntax:
    content: public static Vector2 GetRandomPointWithinCircle(float radius, Vector2 origin = null)
    parameters:
    - id: radius
      type: System.Single
    - id: origin
      type: Global.Vector2
    return:
      type: Global.Vector2
    content.vb: Public Shared Function GetRandomPointWithinCircle(radius As Single, origin As Vector2 = Nothing) As Vector2
  overload: XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircleUniformly(System.Single,Vector2)
  commentId: M:XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircleUniformly(System.Single,Vector2)
  id: GetRandomPointWithinCircleUniformly(System.Single,Vector2)
  parent: XiheFramework.Utility.VectorMathHelper
  langs:
  - csharp
  - vb
  name: GetRandomPointWithinCircleUniformly(Single, Vector2)
  nameWithType: VectorMathHelper.GetRandomPointWithinCircleUniformly(Single, Vector2)
  fullName: XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircleUniformly(System.Single, Vector2)
  type: Method
  source:
    id: GetRandomPointWithinCircleUniformly
    path: ''
    startLine: 2440
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Utility
  syntax:
    content: public static Vector2 GetRandomPointWithinCircleUniformly(float radius, Vector2 origin = null)
    parameters:
    - id: radius
      type: System.Single
    - id: origin
      type: Global.Vector2
    return:
      type: Global.Vector2
    content.vb: Public Shared Function GetRandomPointWithinCircleUniformly(radius As Single, origin As Vector2 = Nothing) As Vector2
  overload: XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircleUniformly*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: XiheFramework.Utility
  commentId: N:XiheFramework.Utility
  name: XiheFramework.Utility
  nameWithType: XiheFramework.Utility
  fullName: XiheFramework.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircle*
  commentId: Overload:XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircle
  name: GetRandomPointWithinCircle
  nameWithType: VectorMathHelper.GetRandomPointWithinCircle
  fullName: XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircle
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Global.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircleUniformly*
  commentId: Overload:XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircleUniformly
  name: GetRandomPointWithinCircleUniformly
  nameWithType: VectorMathHelper.GetRandomPointWithinCircleUniformly
  fullName: XiheFramework.Utility.VectorMathHelper.GetRandomPointWithinCircleUniformly
