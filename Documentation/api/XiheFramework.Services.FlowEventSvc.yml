### YamlMime:ManagedReference
items:
- uid: XiheFramework.Services.FlowEventSvc
  commentId: T:XiheFramework.Services.FlowEventSvc
  id: FlowEventSvc
  parent: XiheFramework.Services
  children:
  - XiheFramework.Services.FlowEventSvc.DestroyFlowEvent(System.String,System.Single)
  - XiheFramework.Services.FlowEventSvc.IsEventUsed(System.String)
  - XiheFramework.Services.FlowEventSvc.SetEventUsed(System.String,System.Boolean)
  - XiheFramework.Services.FlowEventSvc.StartFlowEvent(System.String)
  langs:
  - csharp
  - vb
  name: FlowEventSvc
  nameWithType: FlowEventSvc
  fullName: XiheFramework.Services.FlowEventSvc
  type: Class
  source:
    id: FlowEventSvc
    path: ''
    startLine: 1793
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Services
  syntax:
    content: public static class FlowEventSvc
    content.vb: Public Module FlowEventSvc
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: XiheFramework.Services.FlowEventSvc.SetEventUsed(System.String,System.Boolean)
  commentId: M:XiheFramework.Services.FlowEventSvc.SetEventUsed(System.String,System.Boolean)
  id: SetEventUsed(System.String,System.Boolean)
  parent: XiheFramework.Services.FlowEventSvc
  langs:
  - csharp
  - vb
  name: SetEventUsed(String, Boolean)
  nameWithType: FlowEventSvc.SetEventUsed(String, Boolean)
  fullName: XiheFramework.Services.FlowEventSvc.SetEventUsed(System.String, System.Boolean)
  type: Method
  source:
    id: SetEventUsed
    path: ''
    startLine: 1794
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Services
  syntax:
    content: public static void SetEventUsed(string eventName, bool used)
    parameters:
    - id: eventName
      type: System.String
    - id: used
      type: System.Boolean
    content.vb: Public Shared Sub SetEventUsed(eventName As String, used As Boolean)
  overload: XiheFramework.Services.FlowEventSvc.SetEventUsed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XiheFramework.Services.FlowEventSvc.IsEventUsed(System.String)
  commentId: M:XiheFramework.Services.FlowEventSvc.IsEventUsed(System.String)
  id: IsEventUsed(System.String)
  parent: XiheFramework.Services.FlowEventSvc
  langs:
  - csharp
  - vb
  name: IsEventUsed(String)
  nameWithType: FlowEventSvc.IsEventUsed(String)
  fullName: XiheFramework.Services.FlowEventSvc.IsEventUsed(System.String)
  type: Method
  source:
    id: IsEventUsed
    path: ''
    startLine: 1799
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Services
  syntax:
    content: public static bool IsEventUsed(string eventName)
    parameters:
    - id: eventName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsEventUsed(eventName As String) As Boolean
  overload: XiheFramework.Services.FlowEventSvc.IsEventUsed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XiheFramework.Services.FlowEventSvc.StartFlowEvent(System.String)
  commentId: M:XiheFramework.Services.FlowEventSvc.StartFlowEvent(System.String)
  id: StartFlowEvent(System.String)
  parent: XiheFramework.Services.FlowEventSvc
  langs:
  - csharp
  - vb
  name: StartFlowEvent(String)
  nameWithType: FlowEventSvc.StartFlowEvent(String)
  fullName: XiheFramework.Services.FlowEventSvc.StartFlowEvent(System.String)
  type: Method
  source:
    id: StartFlowEvent
    path: ''
    startLine: 1803
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Services
  syntax:
    content: public static void StartFlowEvent(string eventName)
    parameters:
    - id: eventName
      type: System.String
    content.vb: Public Shared Sub StartFlowEvent(eventName As String)
  overload: XiheFramework.Services.FlowEventSvc.StartFlowEvent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XiheFramework.Services.FlowEventSvc.DestroyFlowEvent(System.String,System.Single)
  commentId: M:XiheFramework.Services.FlowEventSvc.DestroyFlowEvent(System.String,System.Single)
  id: DestroyFlowEvent(System.String,System.Single)
  parent: XiheFramework.Services.FlowEventSvc
  langs:
  - csharp
  - vb
  name: DestroyFlowEvent(String, Single)
  nameWithType: FlowEventSvc.DestroyFlowEvent(String, Single)
  fullName: XiheFramework.Services.FlowEventSvc.DestroyFlowEvent(System.String, System.Single)
  type: Method
  source:
    id: DestroyFlowEvent
    path: ''
    startLine: 1807
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Services
  syntax:
    content: public static void DestroyFlowEvent(string eventName, float delay)
    parameters:
    - id: eventName
      type: System.String
    - id: delay
      type: System.Single
    content.vb: Public Shared Sub DestroyFlowEvent(eventName As String, delay As Single)
  overload: XiheFramework.Services.FlowEventSvc.DestroyFlowEvent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: XiheFramework.Services
  commentId: N:XiheFramework.Services
  name: XiheFramework.Services
  nameWithType: XiheFramework.Services
  fullName: XiheFramework.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XiheFramework.Services.FlowEventSvc.SetEventUsed*
  commentId: Overload:XiheFramework.Services.FlowEventSvc.SetEventUsed
  name: SetEventUsed
  nameWithType: FlowEventSvc.SetEventUsed
  fullName: XiheFramework.Services.FlowEventSvc.SetEventUsed
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XiheFramework.Services.FlowEventSvc.IsEventUsed*
  commentId: Overload:XiheFramework.Services.FlowEventSvc.IsEventUsed
  name: IsEventUsed
  nameWithType: FlowEventSvc.IsEventUsed
  fullName: XiheFramework.Services.FlowEventSvc.IsEventUsed
- uid: XiheFramework.Services.FlowEventSvc.StartFlowEvent*
  commentId: Overload:XiheFramework.Services.FlowEventSvc.StartFlowEvent
  name: StartFlowEvent
  nameWithType: FlowEventSvc.StartFlowEvent
  fullName: XiheFramework.Services.FlowEventSvc.StartFlowEvent
- uid: XiheFramework.Services.FlowEventSvc.DestroyFlowEvent*
  commentId: Overload:XiheFramework.Services.FlowEventSvc.DestroyFlowEvent
  name: DestroyFlowEvent
  nameWithType: FlowEventSvc.DestroyFlowEvent
  fullName: XiheFramework.Services.FlowEventSvc.DestroyFlowEvent
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
