### YamlMime:ManagedReference
items:
- uid: XiheFramework.Modules.FSM.StateMachineModule
  commentId: T:XiheFramework.Modules.FSM.StateMachineModule
  id: StateMachineModule
  parent: XiheFramework.Modules.FSM
  children:
  - XiheFramework.Modules.FSM.StateMachineModule.AddFlowState(System.String,System.String,Action,Action,Action)
  - XiheFramework.Modules.FSM.StateMachineModule.ChangeState(System.String,System.String)
  - XiheFramework.Modules.FSM.StateMachineModule.ContinueAllStateMachines
  - XiheFramework.Modules.FSM.StateMachineModule.CreateStateMachine(System.String)
  - XiheFramework.Modules.FSM.StateMachineModule.enableDebug
  - XiheFramework.Modules.FSM.StateMachineModule.GetCurrentState(System.String)
  - XiheFramework.Modules.FSM.StateMachineModule.GetData
  - XiheFramework.Modules.FSM.StateMachineModule.IsFsmExisted(System.String)
  - XiheFramework.Modules.FSM.StateMachineModule.PauseAllStateMachines
  - XiheFramework.Modules.FSM.StateMachineModule.RemoveStateMachine(System.String)
  - XiheFramework.Modules.FSM.StateMachineModule.SetDefaultState(System.String,System.String)
  langs:
  - csharp
  - vb
  name: StateMachineModule
  nameWithType: StateMachineModule
  fullName: XiheFramework.Modules.FSM.StateMachineModule
  type: Class
  source:
    id: StateMachineModule
    path: ''
    startLine: 1013
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.FSM
  syntax:
    content: 'public class StateMachineModule : GameModule'
    content.vb: >-
      Public Class StateMachineModule
          Inherits GameModule
  inheritance:
  - System.Object
  - XiheFramework.Modules.Base.GameModule
  inheritedMembers:
  - XiheFramework.Modules.Base.GameModule.Awake
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XiheFramework.Modules.FSM.StateMachineModule.enableDebug
  commentId: F:XiheFramework.Modules.FSM.StateMachineModule.enableDebug
  id: enableDebug
  parent: XiheFramework.Modules.FSM.StateMachineModule
  langs:
  - csharp
  - vb
  name: enableDebug
  nameWithType: StateMachineModule.enableDebug
  fullName: XiheFramework.Modules.FSM.StateMachineModule.enableDebug
  type: Field
  source:
    id: enableDebug
    path: ''
    startLine: 1014
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.FSM
  syntax:
    content: public bool enableDebug
    return:
      type: System.Boolean
    content.vb: Public enableDebug As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.FSM.StateMachineModule.GetData
  commentId: M:XiheFramework.Modules.FSM.StateMachineModule.GetData
  id: GetData
  parent: XiheFramework.Modules.FSM.StateMachineModule
  langs:
  - csharp
  - vb
  name: GetData()
  nameWithType: StateMachineModule.GetData()
  fullName: XiheFramework.Modules.FSM.StateMachineModule.GetData()
  type: Method
  source:
    id: GetData
    path: ''
    startLine: 1026
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.FSM
  syntax:
    content: public Dictionary<string, StateMachine> GetData()
    return:
      type: Global.Dictionary{System.String,XiheFramework.Modules.FSM.StateMachine}
    content.vb: Public Function GetData As Dictionary(Of String, StateMachine)
  overload: XiheFramework.Modules.FSM.StateMachineModule.GetData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.FSM.StateMachineModule.GetCurrentState(System.String)
  commentId: M:XiheFramework.Modules.FSM.StateMachineModule.GetCurrentState(System.String)
  id: GetCurrentState(System.String)
  parent: XiheFramework.Modules.FSM.StateMachineModule
  langs:
  - csharp
  - vb
  name: GetCurrentState(String)
  nameWithType: StateMachineModule.GetCurrentState(String)
  fullName: XiheFramework.Modules.FSM.StateMachineModule.GetCurrentState(System.String)
  type: Method
  source:
    id: GetCurrentState
    path: ''
    startLine: 1030
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.FSM
  syntax:
    content: public string GetCurrentState(string fsmName)
    parameters:
    - id: fsmName
      type: System.String
    return:
      type: System.String
    content.vb: Public Function GetCurrentState(fsmName As String) As String
  overload: XiheFramework.Modules.FSM.StateMachineModule.GetCurrentState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.FSM.StateMachineModule.SetDefaultState(System.String,System.String)
  commentId: M:XiheFramework.Modules.FSM.StateMachineModule.SetDefaultState(System.String,System.String)
  id: SetDefaultState(System.String,System.String)
  parent: XiheFramework.Modules.FSM.StateMachineModule
  langs:
  - csharp
  - vb
  name: SetDefaultState(String, String)
  nameWithType: StateMachineModule.SetDefaultState(String, String)
  fullName: XiheFramework.Modules.FSM.StateMachineModule.SetDefaultState(System.String, System.String)
  type: Method
  source:
    id: SetDefaultState
    path: ''
    startLine: 1039
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.FSM
  syntax:
    content: public void SetDefaultState(string fsmName, string stateName)
    parameters:
    - id: fsmName
      type: System.String
    - id: stateName
      type: System.String
    content.vb: Public Sub SetDefaultState(fsmName As String, stateName As String)
  overload: XiheFramework.Modules.FSM.StateMachineModule.SetDefaultState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.FSM.StateMachineModule.ChangeState(System.String,System.String)
  commentId: M:XiheFramework.Modules.FSM.StateMachineModule.ChangeState(System.String,System.String)
  id: ChangeState(System.String,System.String)
  parent: XiheFramework.Modules.FSM.StateMachineModule
  langs:
  - csharp
  - vb
  name: ChangeState(String, String)
  nameWithType: StateMachineModule.ChangeState(String, String)
  fullName: XiheFramework.Modules.FSM.StateMachineModule.ChangeState(System.String, System.String)
  type: Method
  source:
    id: ChangeState
    path: ''
    startLine: 1045
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.FSM
  syntax:
    content: public void ChangeState(string fsmName, string stateName)
    parameters:
    - id: fsmName
      type: System.String
    - id: stateName
      type: System.String
    content.vb: Public Sub ChangeState(fsmName As String, stateName As String)
  overload: XiheFramework.Modules.FSM.StateMachineModule.ChangeState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.FSM.StateMachineModule.AddFlowState(System.String,System.String,Action,Action,Action)
  commentId: M:XiheFramework.Modules.FSM.StateMachineModule.AddFlowState(System.String,System.String,Action,Action,Action)
  id: AddFlowState(System.String,System.String,Action,Action,Action)
  parent: XiheFramework.Modules.FSM.StateMachineModule
  langs:
  - csharp
  - vb
  name: AddFlowState(String, String, Action, Action, Action)
  nameWithType: StateMachineModule.AddFlowState(String, String, Action, Action, Action)
  fullName: XiheFramework.Modules.FSM.StateMachineModule.AddFlowState(System.String, System.String, Action, Action, Action)
  type: Method
  source:
    id: AddFlowState
    path: ''
    startLine: 1051
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.FSM
  syntax:
    content: public void AddFlowState(string fsmName, string stateName, Action onEnter, Action onUpdate, Action onExit)
    parameters:
    - id: fsmName
      type: System.String
    - id: stateName
      type: System.String
    - id: onEnter
      type: Global.Action
    - id: onUpdate
      type: Global.Action
    - id: onExit
      type: Global.Action
    content.vb: Public Sub AddFlowState(fsmName As String, stateName As String, onEnter As Action, onUpdate As Action, onExit As Action)
  overload: XiheFramework.Modules.FSM.StateMachineModule.AddFlowState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.FSM.StateMachineModule.IsFsmExisted(System.String)
  commentId: M:XiheFramework.Modules.FSM.StateMachineModule.IsFsmExisted(System.String)
  id: IsFsmExisted(System.String)
  parent: XiheFramework.Modules.FSM.StateMachineModule
  langs:
  - csharp
  - vb
  name: IsFsmExisted(String)
  nameWithType: StateMachineModule.IsFsmExisted(String)
  fullName: XiheFramework.Modules.FSM.StateMachineModule.IsFsmExisted(System.String)
  type: Method
  source:
    id: IsFsmExisted
    path: ''
    startLine: 1059
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.FSM
  syntax:
    content: public bool IsFsmExisted(string fsmName)
    parameters:
    - id: fsmName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsFsmExisted(fsmName As String) As Boolean
  overload: XiheFramework.Modules.FSM.StateMachineModule.IsFsmExisted*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.FSM.StateMachineModule.CreateStateMachine(System.String)
  commentId: M:XiheFramework.Modules.FSM.StateMachineModule.CreateStateMachine(System.String)
  id: CreateStateMachine(System.String)
  parent: XiheFramework.Modules.FSM.StateMachineModule
  langs:
  - csharp
  - vb
  name: CreateStateMachine(String)
  nameWithType: StateMachineModule.CreateStateMachine(String)
  fullName: XiheFramework.Modules.FSM.StateMachineModule.CreateStateMachine(System.String)
  type: Method
  source:
    id: CreateStateMachine
    path: ''
    startLine: 1063
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.FSM
  syntax:
    content: public StateMachine CreateStateMachine(string fsmName)
    parameters:
    - id: fsmName
      type: System.String
    return:
      type: XiheFramework.Modules.FSM.StateMachine
    content.vb: Public Function CreateStateMachine(fsmName As String) As StateMachine
  overload: XiheFramework.Modules.FSM.StateMachineModule.CreateStateMachine*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.FSM.StateMachineModule.RemoveStateMachine(System.String)
  commentId: M:XiheFramework.Modules.FSM.StateMachineModule.RemoveStateMachine(System.String)
  id: RemoveStateMachine(System.String)
  parent: XiheFramework.Modules.FSM.StateMachineModule
  langs:
  - csharp
  - vb
  name: RemoveStateMachine(String)
  nameWithType: StateMachineModule.RemoveStateMachine(String)
  fullName: XiheFramework.Modules.FSM.StateMachineModule.RemoveStateMachine(System.String)
  type: Method
  source:
    id: RemoveStateMachine
    path: ''
    startLine: 1076
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.FSM
  syntax:
    content: public void RemoveStateMachine(string fsmName)
    parameters:
    - id: fsmName
      type: System.String
    content.vb: Public Sub RemoveStateMachine(fsmName As String)
  overload: XiheFramework.Modules.FSM.StateMachineModule.RemoveStateMachine*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.FSM.StateMachineModule.PauseAllStateMachines
  commentId: M:XiheFramework.Modules.FSM.StateMachineModule.PauseAllStateMachines
  id: PauseAllStateMachines
  parent: XiheFramework.Modules.FSM.StateMachineModule
  langs:
  - csharp
  - vb
  name: PauseAllStateMachines()
  nameWithType: StateMachineModule.PauseAllStateMachines()
  fullName: XiheFramework.Modules.FSM.StateMachineModule.PauseAllStateMachines()
  type: Method
  source:
    id: PauseAllStateMachines
    path: ''
    startLine: 1086
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.FSM
  syntax:
    content: public void PauseAllStateMachines()
    content.vb: Public Sub PauseAllStateMachines
  overload: XiheFramework.Modules.FSM.StateMachineModule.PauseAllStateMachines*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.FSM.StateMachineModule.ContinueAllStateMachines
  commentId: M:XiheFramework.Modules.FSM.StateMachineModule.ContinueAllStateMachines
  id: ContinueAllStateMachines
  parent: XiheFramework.Modules.FSM.StateMachineModule
  langs:
  - csharp
  - vb
  name: ContinueAllStateMachines()
  nameWithType: StateMachineModule.ContinueAllStateMachines()
  fullName: XiheFramework.Modules.FSM.StateMachineModule.ContinueAllStateMachines()
  type: Method
  source:
    id: ContinueAllStateMachines
    path: ''
    startLine: 1090
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.FSM
  syntax:
    content: public void ContinueAllStateMachines()
    content.vb: Public Sub ContinueAllStateMachines
  overload: XiheFramework.Modules.FSM.StateMachineModule.ContinueAllStateMachines*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: XiheFramework.Modules.FSM
  commentId: N:XiheFramework.Modules.FSM
  name: XiheFramework.Modules.FSM
  nameWithType: XiheFramework.Modules.FSM
  fullName: XiheFramework.Modules.FSM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XiheFramework.Modules.Base.GameModule
  commentId: T:XiheFramework.Modules.Base.GameModule
  parent: XiheFramework.Modules.Base
  name: GameModule
  nameWithType: GameModule
  fullName: XiheFramework.Modules.Base.GameModule
- uid: XiheFramework.Modules.Base.GameModule.Awake
  commentId: M:XiheFramework.Modules.Base.GameModule.Awake
  parent: XiheFramework.Modules.Base.GameModule
  name: Awake()
  nameWithType: GameModule.Awake()
  fullName: XiheFramework.Modules.Base.GameModule.Awake()
  spec.csharp:
  - uid: XiheFramework.Modules.Base.GameModule.Awake
    name: Awake
    nameWithType: GameModule.Awake
    fullName: XiheFramework.Modules.Base.GameModule.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XiheFramework.Modules.Base.GameModule.Awake
    name: Awake
    nameWithType: GameModule.Awake
    fullName: XiheFramework.Modules.Base.GameModule.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XiheFramework.Modules.Base
  commentId: N:XiheFramework.Modules.Base
  name: XiheFramework.Modules.Base
  nameWithType: XiheFramework.Modules.Base
  fullName: XiheFramework.Modules.Base
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XiheFramework.Modules.FSM.StateMachineModule.GetData*
  commentId: Overload:XiheFramework.Modules.FSM.StateMachineModule.GetData
  name: GetData
  nameWithType: StateMachineModule.GetData
  fullName: XiheFramework.Modules.FSM.StateMachineModule.GetData
- uid: Global.Dictionary{System.String,XiheFramework.Modules.FSM.StateMachine}
  commentId: '!:Global.Dictionary{System.String,XiheFramework.Modules.FSM.StateMachine}'
  definition: Global.Dictionary`2
  name: Dictionary<String, StateMachine>
  nameWithType: Dictionary<String, StateMachine>
  fullName: Dictionary<System.String, XiheFramework.Modules.FSM.StateMachine>
  nameWithType.vb: Dictionary(Of String, StateMachine)
  fullName.vb: Dictionary(Of System.String, XiheFramework.Modules.FSM.StateMachine)
  name.vb: Dictionary(Of String, StateMachine)
  spec.csharp:
  - uid: Global.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XiheFramework.Modules.FSM.StateMachine
    name: StateMachine
    nameWithType: StateMachine
    fullName: XiheFramework.Modules.FSM.StateMachine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XiheFramework.Modules.FSM.StateMachine
    name: StateMachine
    nameWithType: StateMachine
    fullName: XiheFramework.Modules.FSM.StateMachine
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Global.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: XiheFramework.Modules.FSM.StateMachineModule.GetCurrentState*
  commentId: Overload:XiheFramework.Modules.FSM.StateMachineModule.GetCurrentState
  name: GetCurrentState
  nameWithType: StateMachineModule.GetCurrentState
  fullName: XiheFramework.Modules.FSM.StateMachineModule.GetCurrentState
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XiheFramework.Modules.FSM.StateMachineModule.SetDefaultState*
  commentId: Overload:XiheFramework.Modules.FSM.StateMachineModule.SetDefaultState
  name: SetDefaultState
  nameWithType: StateMachineModule.SetDefaultState
  fullName: XiheFramework.Modules.FSM.StateMachineModule.SetDefaultState
- uid: XiheFramework.Modules.FSM.StateMachineModule.ChangeState*
  commentId: Overload:XiheFramework.Modules.FSM.StateMachineModule.ChangeState
  name: ChangeState
  nameWithType: StateMachineModule.ChangeState
  fullName: XiheFramework.Modules.FSM.StateMachineModule.ChangeState
- uid: XiheFramework.Modules.FSM.StateMachineModule.AddFlowState*
  commentId: Overload:XiheFramework.Modules.FSM.StateMachineModule.AddFlowState
  name: AddFlowState
  nameWithType: StateMachineModule.AddFlowState
  fullName: XiheFramework.Modules.FSM.StateMachineModule.AddFlowState
- uid: Global.Action
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: Action
- uid: XiheFramework.Modules.FSM.StateMachineModule.IsFsmExisted*
  commentId: Overload:XiheFramework.Modules.FSM.StateMachineModule.IsFsmExisted
  name: IsFsmExisted
  nameWithType: StateMachineModule.IsFsmExisted
  fullName: XiheFramework.Modules.FSM.StateMachineModule.IsFsmExisted
- uid: XiheFramework.Modules.FSM.StateMachineModule.CreateStateMachine*
  commentId: Overload:XiheFramework.Modules.FSM.StateMachineModule.CreateStateMachine
  name: CreateStateMachine
  nameWithType: StateMachineModule.CreateStateMachine
  fullName: XiheFramework.Modules.FSM.StateMachineModule.CreateStateMachine
- uid: XiheFramework.Modules.FSM.StateMachine
  commentId: T:XiheFramework.Modules.FSM.StateMachine
  parent: XiheFramework.Modules.FSM
  name: StateMachine
  nameWithType: StateMachine
  fullName: XiheFramework.Modules.FSM.StateMachine
- uid: XiheFramework.Modules.FSM.StateMachineModule.RemoveStateMachine*
  commentId: Overload:XiheFramework.Modules.FSM.StateMachineModule.RemoveStateMachine
  name: RemoveStateMachine
  nameWithType: StateMachineModule.RemoveStateMachine
  fullName: XiheFramework.Modules.FSM.StateMachineModule.RemoveStateMachine
- uid: XiheFramework.Modules.FSM.StateMachineModule.PauseAllStateMachines*
  commentId: Overload:XiheFramework.Modules.FSM.StateMachineModule.PauseAllStateMachines
  name: PauseAllStateMachines
  nameWithType: StateMachineModule.PauseAllStateMachines
  fullName: XiheFramework.Modules.FSM.StateMachineModule.PauseAllStateMachines
- uid: XiheFramework.Modules.FSM.StateMachineModule.ContinueAllStateMachines*
  commentId: Overload:XiheFramework.Modules.FSM.StateMachineModule.ContinueAllStateMachines
  name: ContinueAllStateMachines
  nameWithType: StateMachineModule.ContinueAllStateMachines
  fullName: XiheFramework.Modules.FSM.StateMachineModule.ContinueAllStateMachines
