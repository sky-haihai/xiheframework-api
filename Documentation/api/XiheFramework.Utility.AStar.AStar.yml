### YamlMime:ManagedReference
items:
- uid: XiheFramework.Utility.AStar.AStar
  commentId: T:XiheFramework.Utility.AStar.AStar
  id: AStar
  parent: XiheFramework.Utility.AStar
  children:
  - XiheFramework.Utility.AStar.AStar.GetPath(Dictionary{System.Int32,XiheFramework.Utility.AStar.AStarNode},XiheFramework.Utility.AStar.AStarNode,XiheFramework.Utility.AStar.AStarNode,System.Boolean)
  langs:
  - csharp
  - vb
  name: AStar
  nameWithType: AStar
  fullName: XiheFramework.Utility.AStar.AStar
  type: Class
  source:
    id: AStar
    path: ''
    startLine: 2455
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Utility.AStar
  syntax:
    content: public static class AStar
    content.vb: Public Module AStar
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: XiheFramework.Utility.AStar.AStar.GetPath(Dictionary{System.Int32,XiheFramework.Utility.AStar.AStarNode},XiheFramework.Utility.AStar.AStarNode,XiheFramework.Utility.AStar.AStarNode,System.Boolean)
  commentId: M:XiheFramework.Utility.AStar.AStar.GetPath(Dictionary{System.Int32,XiheFramework.Utility.AStar.AStarNode},XiheFramework.Utility.AStar.AStarNode,XiheFramework.Utility.AStar.AStarNode,System.Boolean)
  id: GetPath(Dictionary{System.Int32,XiheFramework.Utility.AStar.AStarNode},XiheFramework.Utility.AStar.AStarNode,XiheFramework.Utility.AStar.AStarNode,System.Boolean)
  parent: XiheFramework.Utility.AStar.AStar
  langs:
  - csharp
  - vb
  name: GetPath(Dictionary<Int32, AStarNode>, AStarNode, AStarNode, Boolean)
  nameWithType: AStar.GetPath(Dictionary<Int32, AStarNode>, AStarNode, AStarNode, Boolean)
  fullName: XiheFramework.Utility.AStar.AStar.GetPath(Dictionary<System.Int32, XiheFramework.Utility.AStar.AStarNode>, XiheFramework.Utility.AStar.AStarNode, XiheFramework.Utility.AStar.AStarNode, System.Boolean)
  type: Method
  source:
    id: GetPath
    path: ''
    startLine: 2485
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Utility.AStar
  syntax:
    content: public static AStarNode[] GetPath(Dictionary<int, AStarNode> source, AStarNode startNode, AStarNode targetNode, bool includeDiagonalPath)
    parameters:
    - id: source
      type: Global.Dictionary{System.Int32,XiheFramework.Utility.AStar.AStarNode}
    - id: startNode
      type: XiheFramework.Utility.AStar.AStarNode
    - id: targetNode
      type: XiheFramework.Utility.AStar.AStarNode
    - id: includeDiagonalPath
      type: System.Boolean
    return:
      type: XiheFramework.Utility.AStar.AStarNode[]
    content.vb: Public Shared Function GetPath(source As Dictionary(Of Integer, AStarNode), startNode As AStarNode, targetNode As AStarNode, includeDiagonalPath As Boolean) As AStarNode()
  overload: XiheFramework.Utility.AStar.AStar.GetPath*
  nameWithType.vb: AStar.GetPath(Dictionary(Of Int32, AStarNode), AStarNode, AStarNode, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: XiheFramework.Utility.AStar.AStar.GetPath(Dictionary(Of System.Int32, XiheFramework.Utility.AStar.AStarNode), XiheFramework.Utility.AStar.AStarNode, XiheFramework.Utility.AStar.AStarNode, System.Boolean)
  name.vb: GetPath(Dictionary(Of Int32, AStarNode), AStarNode, AStarNode, Boolean)
references:
- uid: XiheFramework.Utility.AStar
  commentId: N:XiheFramework.Utility.AStar
  name: XiheFramework.Utility.AStar
  nameWithType: XiheFramework.Utility.AStar
  fullName: XiheFramework.Utility.AStar
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XiheFramework.Utility.AStar.AStar.GetPath*
  commentId: Overload:XiheFramework.Utility.AStar.AStar.GetPath
  name: GetPath
  nameWithType: AStar.GetPath
  fullName: XiheFramework.Utility.AStar.AStar.GetPath
- uid: Global.Dictionary{System.Int32,XiheFramework.Utility.AStar.AStarNode}
  commentId: '!:Global.Dictionary{System.Int32,XiheFramework.Utility.AStar.AStarNode}'
  definition: Global.Dictionary`2
  name: Dictionary<Int32, AStarNode>
  nameWithType: Dictionary<Int32, AStarNode>
  fullName: Dictionary<System.Int32, XiheFramework.Utility.AStar.AStarNode>
  nameWithType.vb: Dictionary(Of Int32, AStarNode)
  fullName.vb: Dictionary(Of System.Int32, XiheFramework.Utility.AStar.AStarNode)
  name.vb: Dictionary(Of Int32, AStarNode)
  spec.csharp:
  - uid: Global.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XiheFramework.Utility.AStar.AStarNode
    name: AStarNode
    nameWithType: AStarNode
    fullName: XiheFramework.Utility.AStar.AStarNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XiheFramework.Utility.AStar.AStarNode
    name: AStarNode
    nameWithType: AStarNode
    fullName: XiheFramework.Utility.AStar.AStarNode
  - name: )
    nameWithType: )
    fullName: )
- uid: XiheFramework.Utility.AStar.AStarNode
  commentId: T:XiheFramework.Utility.AStar.AStarNode
  parent: XiheFramework.Utility.AStar
  name: AStarNode
  nameWithType: AStarNode
  fullName: XiheFramework.Utility.AStar.AStarNode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XiheFramework.Utility.AStar.AStarNode[]
  isExternal: true
  name: AStarNode[]
  nameWithType: AStarNode[]
  fullName: XiheFramework.Utility.AStar.AStarNode[]
  nameWithType.vb: AStarNode()
  fullName.vb: XiheFramework.Utility.AStar.AStarNode()
  name.vb: AStarNode()
  spec.csharp:
  - uid: XiheFramework.Utility.AStar.AStarNode
    name: AStarNode
    nameWithType: AStarNode
    fullName: XiheFramework.Utility.AStar.AStarNode
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: XiheFramework.Utility.AStar.AStarNode
    name: AStarNode
    nameWithType: AStarNode
    fullName: XiheFramework.Utility.AStar.AStarNode
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Global.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Global.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
