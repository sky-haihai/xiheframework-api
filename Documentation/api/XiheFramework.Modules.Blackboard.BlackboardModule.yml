### YamlMime:ManagedReference
items:
- uid: XiheFramework.Modules.Blackboard.BlackboardModule
  commentId: T:XiheFramework.Modules.Blackboard.BlackboardModule
  id: BlackboardModule
  parent: XiheFramework.Modules.Blackboard
  children:
  - XiheFramework.Modules.Blackboard.BlackboardModule.ContainsKey(System.String)
  - XiheFramework.Modules.Blackboard.BlackboardModule.GetData(System.String)
  - XiheFramework.Modules.Blackboard.BlackboardModule.GetData``1(System.String)
  - XiheFramework.Modules.Blackboard.BlackboardModule.GetDataArray
  - XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPathArray
  - XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPaths
  - XiheFramework.Modules.Blackboard.BlackboardModule.RemoveData(System.String)
  - XiheFramework.Modules.Blackboard.BlackboardModule.Reset
  - XiheFramework.Modules.Blackboard.BlackboardModule.SetData``1(System.String,``0,XiheFramework.Modules.Blackboard.BlackBoardDataType)
  langs:
  - csharp
  - vb
  name: BlackboardModule
  nameWithType: BlackboardModule
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule
  type: Class
  source:
    id: BlackboardModule
    path: ''
    startLine: 355
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Blackboard
  syntax:
    content: 'public class BlackboardModule : GameModule'
    content.vb: >-
      Public Class BlackboardModule
          Inherits GameModule
  inheritance:
  - System.Object
  - XiheFramework.Modules.Base.GameModule
  inheritedMembers:
  - XiheFramework.Modules.Base.GameModule.Awake
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.Reset
  commentId: M:XiheFramework.Modules.Blackboard.BlackboardModule.Reset
  id: Reset
  parent: XiheFramework.Modules.Blackboard.BlackboardModule
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: BlackboardModule.Reset()
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.Reset()
  type: Method
  source:
    id: Reset
    path: ''
    startLine: 363
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Blackboard
  summary: "\nClear all runtime data\n"
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: XiheFramework.Modules.Blackboard.BlackboardModule.Reset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.GetDataArray
  commentId: M:XiheFramework.Modules.Blackboard.BlackboardModule.GetDataArray
  id: GetDataArray
  parent: XiheFramework.Modules.Blackboard.BlackboardModule
  langs:
  - csharp
  - vb
  name: GetDataArray()
  nameWithType: BlackboardModule.GetDataArray()
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.GetDataArray()
  type: Method
  source:
    id: GetDataArray
    path: ''
    startLine: 372
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Blackboard
  summary: "\nRetrive all data from the current blackboard\n"
  example: []
  syntax:
    content: public object[] GetDataArray()
    return:
      type: System.Object[]
      description: 'data '
    content.vb: Public Function GetDataArray As Object()
  overload: XiheFramework.Modules.Blackboard.BlackboardModule.GetDataArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPathArray
  commentId: M:XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPathArray
  id: GetDataPathArray
  parent: XiheFramework.Modules.Blackboard.BlackboardModule
  langs:
  - csharp
  - vb
  name: GetDataPathArray()
  nameWithType: BlackboardModule.GetDataPathArray()
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPathArray()
  type: Method
  source:
    id: GetDataPathArray
    path: ''
    startLine: 383
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Blackboard
  summary: "\nRetrive all keys from the current blackboard\n"
  example: []
  syntax:
    content: public IEnumerable<string> GetDataPathArray()
    return:
      type: Global.IEnumerable{System.String}
      description: 'keys '
    content.vb: Public Function GetDataPathArray As IEnumerable(Of String)
  overload: XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPathArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPaths
  commentId: M:XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPaths
  id: GetDataPaths
  parent: XiheFramework.Modules.Blackboard.BlackboardModule
  langs:
  - csharp
  - vb
  name: GetDataPaths()
  nameWithType: BlackboardModule.GetDataPaths()
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPaths()
  type: Method
  source:
    id: GetDataPaths
    path: ''
    startLine: 387
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Blackboard
  syntax:
    content: public TreeNode<string> GetDataPaths()
    return:
      type: Global.TreeNode{System.String}
    content.vb: Public Function GetDataPaths As TreeNode(Of String)
  overload: XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPaths*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.SetData``1(System.String,``0,XiheFramework.Modules.Blackboard.BlackBoardDataType)
  commentId: M:XiheFramework.Modules.Blackboard.BlackboardModule.SetData``1(System.String,``0,XiheFramework.Modules.Blackboard.BlackBoardDataType)
  id: SetData``1(System.String,``0,XiheFramework.Modules.Blackboard.BlackBoardDataType)
  parent: XiheFramework.Modules.Blackboard.BlackboardModule
  langs:
  - csharp
  - vb
  name: SetData<T>(String, T, BlackBoardDataType)
  nameWithType: BlackboardModule.SetData<T>(String, T, BlackBoardDataType)
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.SetData<T>(System.String, T, XiheFramework.Modules.Blackboard.BlackBoardDataType)
  type: Method
  source:
    id: SetData
    path: ''
    startLine: 399
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Blackboard
  summary: "\nSet data at runtime\n"
  example: []
  syntax:
    content: public void SetData<T>(string dataName, T value, BlackBoardDataType targetType = BlackBoardDataType.Runtime)
    parameters:
    - id: dataName
      type: System.String
      description: data name, work as indexing key
    - id: value
      type: '{T}'
      description: data entity
    - id: targetType
      type: XiheFramework.Modules.Blackboard.BlackBoardDataType
      description: data type
    typeParameters:
    - id: T
      description: object
    content.vb: Public Sub SetData(Of T)(dataName As String, value As T, targetType As BlackBoardDataType = BlackBoardDataType.Runtime)
  overload: XiheFramework.Modules.Blackboard.BlackboardModule.SetData*
  nameWithType.vb: BlackboardModule.SetData(Of T)(String, T, BlackBoardDataType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XiheFramework.Modules.Blackboard.BlackboardModule.SetData(Of T)(System.String, T, XiheFramework.Modules.Blackboard.BlackBoardDataType)
  name.vb: SetData(Of T)(String, T, BlackBoardDataType)
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.GetData(System.String)
  commentId: M:XiheFramework.Modules.Blackboard.BlackboardModule.GetData(System.String)
  id: GetData(System.String)
  parent: XiheFramework.Modules.Blackboard.BlackboardModule
  langs:
  - csharp
  - vb
  name: GetData(String)
  nameWithType: BlackboardModule.GetData(String)
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.GetData(System.String)
  type: Method
  source:
    id: GetData
    path: ''
    startLine: 413
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Blackboard
  summary: "\nGet data entity at runtime\n"
  example: []
  syntax:
    content: public object GetData(string dataName)
    parameters:
    - id: dataName
      type: System.String
      description: data name, work as indexing key
    return:
      type: System.Object
      description: ''
    content.vb: Public Function GetData(dataName As String) As Object
  overload: XiheFramework.Modules.Blackboard.BlackboardModule.GetData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.GetData``1(System.String)
  commentId: M:XiheFramework.Modules.Blackboard.BlackboardModule.GetData``1(System.String)
  id: GetData``1(System.String)
  parent: XiheFramework.Modules.Blackboard.BlackboardModule
  langs:
  - csharp
  - vb
  name: GetData<T>(String)
  nameWithType: BlackboardModule.GetData<T>(String)
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.GetData<T>(System.String)
  type: Method
  source:
    id: GetData
    path: ''
    startLine: 423
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Blackboard
  summary: "\nGet data entity at runtime with a type conversion\n"
  example: []
  syntax:
    content: public T GetData<T>(string dataName)
    parameters:
    - id: dataName
      type: System.String
      description: data name, work as indexing key
    typeParameters:
    - id: T
      description: output type
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function GetData(Of T)(dataName As String) As T
  overload: XiheFramework.Modules.Blackboard.BlackboardModule.GetData*
  nameWithType.vb: BlackboardModule.GetData(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XiheFramework.Modules.Blackboard.BlackboardModule.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.ContainsKey(System.String)
  commentId: M:XiheFramework.Modules.Blackboard.BlackboardModule.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: XiheFramework.Modules.Blackboard.BlackboardModule
  langs:
  - csharp
  - vb
  name: ContainsKey(String)
  nameWithType: BlackboardModule.ContainsKey(String)
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.ContainsKey(System.String)
  type: Method
  source:
    id: ContainsKey
    path: ''
    startLine: 436
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Blackboard
  summary: "\nCheck whether a data name exists\n"
  example: []
  syntax:
    content: public bool ContainsKey(string dataName)
    parameters:
    - id: dataName
      type: System.String
      description: data name, work as indexing key
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ContainsKey(dataName As String) As Boolean
  overload: XiheFramework.Modules.Blackboard.BlackboardModule.ContainsKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.RemoveData(System.String)
  commentId: M:XiheFramework.Modules.Blackboard.BlackboardModule.RemoveData(System.String)
  id: RemoveData(System.String)
  parent: XiheFramework.Modules.Blackboard.BlackboardModule
  langs:
  - csharp
  - vb
  name: RemoveData(String)
  nameWithType: BlackboardModule.RemoveData(String)
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.RemoveData(System.String)
  type: Method
  source:
    id: RemoveData
    path: ''
    startLine: 444
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Blackboard
  summary: "\nRemove a data entity from the runtime Blackboard using its data name\n"
  example: []
  syntax:
    content: public void RemoveData(string dataName)
    parameters:
    - id: dataName
      type: System.String
      description: data name, work as indexing key
    content.vb: Public Sub RemoveData(dataName As String)
  overload: XiheFramework.Modules.Blackboard.BlackboardModule.RemoveData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: XiheFramework.Modules.Blackboard
  commentId: N:XiheFramework.Modules.Blackboard
  name: XiheFramework.Modules.Blackboard
  nameWithType: XiheFramework.Modules.Blackboard
  fullName: XiheFramework.Modules.Blackboard
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XiheFramework.Modules.Base.GameModule
  commentId: T:XiheFramework.Modules.Base.GameModule
  parent: XiheFramework.Modules.Base
  name: GameModule
  nameWithType: GameModule
  fullName: XiheFramework.Modules.Base.GameModule
- uid: XiheFramework.Modules.Base.GameModule.Awake
  commentId: M:XiheFramework.Modules.Base.GameModule.Awake
  parent: XiheFramework.Modules.Base.GameModule
  name: Awake()
  nameWithType: GameModule.Awake()
  fullName: XiheFramework.Modules.Base.GameModule.Awake()
  spec.csharp:
  - uid: XiheFramework.Modules.Base.GameModule.Awake
    name: Awake
    nameWithType: GameModule.Awake
    fullName: XiheFramework.Modules.Base.GameModule.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XiheFramework.Modules.Base.GameModule.Awake
    name: Awake
    nameWithType: GameModule.Awake
    fullName: XiheFramework.Modules.Base.GameModule.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XiheFramework.Modules.Base
  commentId: N:XiheFramework.Modules.Base
  name: XiheFramework.Modules.Base
  nameWithType: XiheFramework.Modules.Base
  fullName: XiheFramework.Modules.Base
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.Reset*
  commentId: Overload:XiheFramework.Modules.Blackboard.BlackboardModule.Reset
  name: Reset
  nameWithType: BlackboardModule.Reset
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.Reset
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.GetDataArray*
  commentId: Overload:XiheFramework.Modules.Blackboard.BlackboardModule.GetDataArray
  name: GetDataArray
  nameWithType: BlackboardModule.GetDataArray
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.GetDataArray
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPathArray*
  commentId: Overload:XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPathArray
  name: GetDataPathArray
  nameWithType: BlackboardModule.GetDataPathArray
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPathArray
- uid: Global.IEnumerable{System.String}
  commentId: '!:Global.IEnumerable{System.String}'
  definition: Global.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: Global.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: Global.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPaths*
  commentId: Overload:XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPaths
  name: GetDataPaths
  nameWithType: BlackboardModule.GetDataPaths
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.GetDataPaths
- uid: Global.TreeNode{System.String}
  commentId: '!:Global.TreeNode{System.String}'
  definition: Global.TreeNode`1
  name: TreeNode<String>
  nameWithType: TreeNode<String>
  fullName: TreeNode<System.String>
  nameWithType.vb: TreeNode(Of String)
  fullName.vb: TreeNode(Of System.String)
  name.vb: TreeNode(Of String)
  spec.csharp:
  - uid: Global.TreeNode`1
    name: TreeNode
    nameWithType: TreeNode
    fullName: TreeNode
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.TreeNode`1
    name: TreeNode
    nameWithType: TreeNode
    fullName: TreeNode
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.TreeNode`1
  commentId: '!:Global.TreeNode`1'
  isExternal: true
  name: TreeNode<>
  nameWithType: TreeNode<>
  fullName: TreeNode<>
  nameWithType.vb: TreeNode(Of )
  fullName.vb: TreeNode(Of )
  name.vb: TreeNode(Of )
  spec.csharp:
  - uid: Global.TreeNode`1
    name: TreeNode
    nameWithType: TreeNode
    fullName: TreeNode
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.TreeNode`1
    name: TreeNode
    nameWithType: TreeNode
    fullName: TreeNode
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.SetData*
  commentId: Overload:XiheFramework.Modules.Blackboard.BlackboardModule.SetData
  name: SetData
  nameWithType: BlackboardModule.SetData
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.SetData
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: XiheFramework.Modules.Blackboard.BlackBoardDataType
  commentId: T:XiheFramework.Modules.Blackboard.BlackBoardDataType
  parent: XiheFramework.Modules.Blackboard
  name: BlackBoardDataType
  nameWithType: BlackBoardDataType
  fullName: XiheFramework.Modules.Blackboard.BlackBoardDataType
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.GetData*
  commentId: Overload:XiheFramework.Modules.Blackboard.BlackboardModule.GetData
  name: GetData
  nameWithType: BlackboardModule.GetData
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.GetData
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.ContainsKey*
  commentId: Overload:XiheFramework.Modules.Blackboard.BlackboardModule.ContainsKey
  name: ContainsKey
  nameWithType: BlackboardModule.ContainsKey
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.ContainsKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XiheFramework.Modules.Blackboard.BlackboardModule.RemoveData*
  commentId: Overload:XiheFramework.Modules.Blackboard.BlackboardModule.RemoveData
  name: RemoveData
  nameWithType: BlackboardModule.RemoveData
  fullName: XiheFramework.Modules.Blackboard.BlackboardModule.RemoveData
