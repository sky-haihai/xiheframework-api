### YamlMime:ManagedReference
items:
- uid: XiheFramework.Modules.FSM.State`1
  commentId: T:XiheFramework.Modules.FSM.State`1
  id: State`1
  parent: XiheFramework.Modules.FSM
  children:
  - XiheFramework.Modules.FSM.State`1.#ctor(XiheFramework.Modules.FSM.StateMachine,`0)
  - XiheFramework.Modules.FSM.State`1.owner
  langs:
  - csharp
  - vb
  name: State<T>
  nameWithType: State<T>
  fullName: XiheFramework.Modules.FSM.State<T>
  type: Class
  source:
    id: State
    path: ''
    startLine: 886
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.FSM
  syntax:
    content: 'public abstract class State<T> : BaseState'
    typeParameters:
    - id: T
    content.vb: >-
      Public MustInherit Class State(Of T)
          Inherits BaseState
  inheritance:
  - System.Object
  - XiheFramework.Modules.FSM.BaseState
  inheritedMembers:
  - XiheFramework.Modules.FSM.BaseState.OnEnter
  - XiheFramework.Modules.FSM.BaseState.OnUpdate
  - XiheFramework.Modules.FSM.BaseState.OnExit
  - XiheFramework.Modules.FSM.BaseState.ChangeState(System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: State(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: XiheFramework.Modules.FSM.State(Of T)
  name.vb: State(Of T)
- uid: XiheFramework.Modules.FSM.State`1.owner
  commentId: F:XiheFramework.Modules.FSM.State`1.owner
  id: owner
  parent: XiheFramework.Modules.FSM.State`1
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: State<T>.owner
  fullName: XiheFramework.Modules.FSM.State<T>.owner
  type: Field
  source:
    id: owner
    path: ''
    startLine: 888
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.FSM
  syntax:
    content: protected T owner
    return:
      type: '{T}'
    content.vb: Protected owner As T
  nameWithType.vb: State(Of T).owner
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: XiheFramework.Modules.FSM.State(Of T).owner
- uid: XiheFramework.Modules.FSM.State`1.#ctor(XiheFramework.Modules.FSM.StateMachine,`0)
  commentId: M:XiheFramework.Modules.FSM.State`1.#ctor(XiheFramework.Modules.FSM.StateMachine,`0)
  id: '#ctor(XiheFramework.Modules.FSM.StateMachine,`0)'
  parent: XiheFramework.Modules.FSM.State`1
  langs:
  - csharp
  - vb
  name: State(StateMachine, T)
  nameWithType: State<T>.State(StateMachine, T)
  fullName: XiheFramework.Modules.FSM.State<T>.State(XiheFramework.Modules.FSM.StateMachine, T)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 890
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.FSM
  syntax:
    content: protected State(StateMachine parentStateMachine, T owner)
    parameters:
    - id: parentStateMachine
      type: XiheFramework.Modules.FSM.StateMachine
    - id: owner
      type: '{T}'
    content.vb: Protected Sub New(parentStateMachine As StateMachine, owner As T)
  overload: XiheFramework.Modules.FSM.State`1.#ctor*
  nameWithType.vb: State(Of T).State(StateMachine, T)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: XiheFramework.Modules.FSM.State(Of T).State(XiheFramework.Modules.FSM.StateMachine, T)
references:
- uid: XiheFramework.Modules.FSM
  commentId: N:XiheFramework.Modules.FSM
  name: XiheFramework.Modules.FSM
  nameWithType: XiheFramework.Modules.FSM
  fullName: XiheFramework.Modules.FSM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XiheFramework.Modules.FSM.BaseState
  commentId: T:XiheFramework.Modules.FSM.BaseState
  parent: XiheFramework.Modules.FSM
  name: BaseState
  nameWithType: BaseState
  fullName: XiheFramework.Modules.FSM.BaseState
- uid: XiheFramework.Modules.FSM.BaseState.OnEnter
  commentId: M:XiheFramework.Modules.FSM.BaseState.OnEnter
  parent: XiheFramework.Modules.FSM.BaseState
  name: OnEnter()
  nameWithType: BaseState.OnEnter()
  fullName: XiheFramework.Modules.FSM.BaseState.OnEnter()
  spec.csharp:
  - uid: XiheFramework.Modules.FSM.BaseState.OnEnter
    name: OnEnter
    nameWithType: BaseState.OnEnter
    fullName: XiheFramework.Modules.FSM.BaseState.OnEnter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XiheFramework.Modules.FSM.BaseState.OnEnter
    name: OnEnter
    nameWithType: BaseState.OnEnter
    fullName: XiheFramework.Modules.FSM.BaseState.OnEnter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XiheFramework.Modules.FSM.BaseState.OnUpdate
  commentId: M:XiheFramework.Modules.FSM.BaseState.OnUpdate
  parent: XiheFramework.Modules.FSM.BaseState
  name: OnUpdate()
  nameWithType: BaseState.OnUpdate()
  fullName: XiheFramework.Modules.FSM.BaseState.OnUpdate()
  spec.csharp:
  - uid: XiheFramework.Modules.FSM.BaseState.OnUpdate
    name: OnUpdate
    nameWithType: BaseState.OnUpdate
    fullName: XiheFramework.Modules.FSM.BaseState.OnUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XiheFramework.Modules.FSM.BaseState.OnUpdate
    name: OnUpdate
    nameWithType: BaseState.OnUpdate
    fullName: XiheFramework.Modules.FSM.BaseState.OnUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XiheFramework.Modules.FSM.BaseState.OnExit
  commentId: M:XiheFramework.Modules.FSM.BaseState.OnExit
  parent: XiheFramework.Modules.FSM.BaseState
  name: OnExit()
  nameWithType: BaseState.OnExit()
  fullName: XiheFramework.Modules.FSM.BaseState.OnExit()
  spec.csharp:
  - uid: XiheFramework.Modules.FSM.BaseState.OnExit
    name: OnExit
    nameWithType: BaseState.OnExit
    fullName: XiheFramework.Modules.FSM.BaseState.OnExit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XiheFramework.Modules.FSM.BaseState.OnExit
    name: OnExit
    nameWithType: BaseState.OnExit
    fullName: XiheFramework.Modules.FSM.BaseState.OnExit
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XiheFramework.Modules.FSM.BaseState.ChangeState(System.String)
  commentId: M:XiheFramework.Modules.FSM.BaseState.ChangeState(System.String)
  parent: XiheFramework.Modules.FSM.BaseState
  isExternal: true
  name: ChangeState(String)
  nameWithType: BaseState.ChangeState(String)
  fullName: XiheFramework.Modules.FSM.BaseState.ChangeState(System.String)
  spec.csharp:
  - uid: XiheFramework.Modules.FSM.BaseState.ChangeState(System.String)
    name: ChangeState
    nameWithType: BaseState.ChangeState
    fullName: XiheFramework.Modules.FSM.BaseState.ChangeState
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XiheFramework.Modules.FSM.BaseState.ChangeState(System.String)
    name: ChangeState
    nameWithType: BaseState.ChangeState
    fullName: XiheFramework.Modules.FSM.BaseState.ChangeState
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: XiheFramework.Modules.FSM.State`1.#ctor*
  commentId: Overload:XiheFramework.Modules.FSM.State`1.#ctor
  name: State
  nameWithType: State<T>.State
  fullName: XiheFramework.Modules.FSM.State<T>.State
  nameWithType.vb: State(Of T).State
  fullName.vb: XiheFramework.Modules.FSM.State(Of T).State
- uid: XiheFramework.Modules.FSM.StateMachine
  commentId: T:XiheFramework.Modules.FSM.StateMachine
  parent: XiheFramework.Modules.FSM
  name: StateMachine
  nameWithType: StateMachine
  fullName: XiheFramework.Modules.FSM.StateMachine
