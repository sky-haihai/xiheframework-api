### YamlMime:ManagedReference
items:
- uid: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet
  commentId: T:XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet
  id: InputModule.TwoDirectionalKeySet
  parent: XiheFramework.Modules.Input
  children:
  - XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.backward
  - XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.forward
  - XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.left
  - XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.name
  - XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.right
  langs:
  - csharp
  - vb
  name: InputModule.TwoDirectionalKeySet
  nameWithType: InputModule.TwoDirectionalKeySet
  fullName: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet
  type: Struct
  source:
    id: TwoDirectionalKeySet
    path: ''
    startLine: 1403
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Input
  syntax:
    content: public struct TwoDirectionalKeySet
    content.vb: Public Structure TwoDirectionalKeySet
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.name
  commentId: F:XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.name
  id: name
  parent: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet
  langs:
  - csharp
  - vb
  name: name
  nameWithType: InputModule.TwoDirectionalKeySet.name
  fullName: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.name
  type: Field
  source:
    id: name
    path: ''
    startLine: 1405
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Input
  syntax:
    content: public string name
    return:
      type: System.String
    content.vb: Public name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.forward
  commentId: F:XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.forward
  id: forward
  parent: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet
  langs:
  - csharp
  - vb
  name: forward
  nameWithType: InputModule.TwoDirectionalKeySet.forward
  fullName: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.forward
  type: Field
  source:
    id: forward
    path: ''
    startLine: 1406
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Input
  syntax:
    content: public KeyCode forward
    return:
      type: Global.KeyCode
    content.vb: Public forward As KeyCode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.backward
  commentId: F:XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.backward
  id: backward
  parent: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet
  langs:
  - csharp
  - vb
  name: backward
  nameWithType: InputModule.TwoDirectionalKeySet.backward
  fullName: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.backward
  type: Field
  source:
    id: backward
    path: ''
    startLine: 1407
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Input
  syntax:
    content: public KeyCode backward
    return:
      type: Global.KeyCode
    content.vb: Public backward As KeyCode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.left
  commentId: F:XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.left
  id: left
  parent: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet
  langs:
  - csharp
  - vb
  name: left
  nameWithType: InputModule.TwoDirectionalKeySet.left
  fullName: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.left
  type: Field
  source:
    id: left
    path: ''
    startLine: 1408
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Input
  syntax:
    content: public KeyCode left
    return:
      type: Global.KeyCode
    content.vb: Public left As KeyCode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.right
  commentId: F:XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.right
  id: right
  parent: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet
  langs:
  - csharp
  - vb
  name: right
  nameWithType: InputModule.TwoDirectionalKeySet.right
  fullName: XiheFramework.Modules.Input.InputModule.TwoDirectionalKeySet.right
  type: Field
  source:
    id: right
    path: ''
    startLine: 1409
  assemblies:
  - cs.temp.dll
  namespace: XiheFramework.Modules.Input
  syntax:
    content: public KeyCode right
    return:
      type: Global.KeyCode
    content.vb: Public right As KeyCode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: XiheFramework.Modules.Input
  commentId: N:XiheFramework.Modules.Input
  name: XiheFramework.Modules.Input
  nameWithType: XiheFramework.Modules.Input
  fullName: XiheFramework.Modules.Input
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Global.KeyCode
  isExternal: true
  name: KeyCode
  nameWithType: KeyCode
  fullName: KeyCode
